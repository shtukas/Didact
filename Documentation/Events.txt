### Events

We have two types of events

1. Internal events.

2. Global events, published to the other machine(s)

### Internal only events

{
    "mikuType"   => "(object has been updated)",
    "objectuuid" => objectuuid,
}

{
    "mikuType"   => "(object has been logically deleted)",
    "objectuuid" => objectuuid,
}

### Global events

{
    "targetInstance" : TargetInstanceName # added by the broadcaster
    "mikuType" => "NxBankEvent",
    "setuuid"  => setuuid,
    "unixtime" => unixtime,
    "date"     => date,
    "weight"   => weight
}

{
    "targetInstance" : TargetInstanceName # added by the broadcaster
    "mikuType"       => "NxDoNotShowUntil",
    "targetuuid"     => uuid,
    "targetunixtime" => unixtime
}

{
    "targetInstance" : TargetInstanceName # added by the broadcaster
    "mikuType"   => "SetDoneToday"
    "targetuuid" => uuid
    "targetdate" => CommonUtils::today()
}

{
    "targetInstance" : TargetInstanceName # added by the broadcaster
    "mikuType"   => "NxDeleted"
    "objectuuid" => objectuuid
}

{
    "targetInstance" : TargetInstanceName # added by the broadcaster
    "mikuType"   => "Daily Slots: Unregister",
    "objectuuid" => objectuuid,
}

{
    "targetInstance" : TargetInstanceName # added by the broadcaster
    "mikuType"   => "Daily Slots: Register",
    "hour"       => hour,
    "objectuuid" => objectuuid,
}

{
    "targetInstance" : TargetInstanceName # added by the broadcaster
    "mikuType"       : "ItemToGroupMapping"
    "groupuuid"      : String
    "itemuuid"       : String
}

{
    "mikuType" => "ItemToGroupMapping-records",
    "records"  => ItemToGroupMapping::records()
}

{
    "mikuType"  => "Bank-records",
    "records"   => Bank::records()
}

{
    "mikuType"  => "NetworkLinks",
    "sourceuuid" => sourceuuid,
    "operation"  => operation,
    "targetuuid" => targetuuid
}

{
    "mikuType" => "NetworkLinks-records",
    "records"  => NetworkLinks::records()
}
