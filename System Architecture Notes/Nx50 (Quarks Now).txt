The Nx50s are the Quarks that we list.

If the number of elements is less than 30, then a thread takes 20 random Quarks and transmute them to Nx50s.

Nx50 (same as Quark) (CoreDataTx) {
    uuid             : String   # _objectId_
    schema           : "Nx50"   # _schema_
    unixtime         : Float    # _unixtime_
    description      : String   # _description_

    contentType      : String       # _payload1_
    payload          : String       # _payload2_
}

- contentType : "Line" | "Url" | "Text" | "ClickableType" | "AionPoint"
- payload
    [contentType]     -> [payload]
    "Line"            -> "" # empty string, the description is the payload
    "Url"             -> String
    "Text"            -> String # reference to a blob
    "ClickableType"   -> <nhash>|<dottedExtension>
    "AionPoint"       -> <nhash>

# -----------------------------------
Saturation Simulation

times = []

def averageOverThePastNDays(times, n)
    times.last(n).inject(0, :+).to_f/n
end

def computeRecoveryTime(times)
    (1..7).map{|n| averageOverThePastNDays(times, n) }.max
end

def saturationRT(times)
    timeInHours = times.last(14).inject(0, :+)
    tx = timeInHours.to_f/10 # multiple of 10 hours over two weeks
    Math.exp(-tx)
end

(0..100).each {|i|
    saturation = saturationRT(times)
    times << saturation
    rt = computeRecoveryTime(times)
    puts "saturation: #{saturation.round(2)}, rt: #{rt.round(2)}"
    sleep 1
}

The above code was to convince myself that the value of the exponential wasn't too badly chosen. Interestingly the daily saturation converges to 0.5 :)

