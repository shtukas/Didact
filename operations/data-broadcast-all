#!/usr/bin/ruby

# encoding: UTF-8

require_relative "../Libs/loader.rb"

filepath1 = OwnerItemsMapping::databaseFile()
Machines::theOtherInstanceIds().each{|targetInstanceId|
    filepath2 = "#{Config::starlightCommsLine()}/#{targetInstanceId}/#{CommonUtils::timeStringL22()}.owner-items-mapping.sqlite3"
    FileUtils.cp(filepath1, filepath2)
}

filepath1 = Bank::pathToBank()
Machines::theOtherInstanceIds().each{|targetInstanceId|
    filepath2 = "#{Config::starlightCommsLine()}/#{targetInstanceId}/#{CommonUtils::timeStringL22()}.bank.sqlite3"
    FileUtils.cp(filepath1, filepath2)
}

filepath1 = NetworkLinks::databaseFile()
Machines::theOtherInstanceIds().each{|targetInstanceId|
    filepath2 = "#{Config::starlightCommsLine()}/#{targetInstanceId}/#{CommonUtils::timeStringL22()}.network-links.sqlite3"
    FileUtils.cp(filepath1, filepath2)
}

tmpfilepath = "/tmp/#{SecureRandom.hex}.sqlite3"
tmpdb = SQLite3::Database.new(tmpfilepath)
tmpdb.busy_timeout = 117
tmpdb.busy_handler { |count| true }
tmpdb.results_as_hash = true
tmpdb.execute("create table _dxf1_ (_objectuuid_ text, _eventuuid_ text primary key, _eventTime_ float, _eventType_ text, _name_ text, _value_ blob)", [])
DxF1Extended::dxF1sFilepathsEnumerator().each{|filepath1|
    db1 = SQLite3::Database.new(filepath1)
    db1.busy_timeout = 117
    db1.busy_handler { |count| true }
    db1.results_as_hash = true
    db1.execute("select * from _dxf1_ where _eventType_=?", ["attribute"]) do |row|
        objectuuid = row["_objectuuid_"]
        eventuuid  = row["_eventuuid_"]
        eventTime  = row["_eventTime_"]
        eventType  = row["_eventType_"]
        attname    = row["_name_"]
        attvalue   = row["_value_"] # We we do not deserialise, we are going to write as is
        tmpdb.execute "insert into _dxf1_ (_objectuuid_, _eventuuid_, _eventTime_, _eventType_, _name_, _value_) values (?, ?, ?, ?, ?, ?)", [objectuuid, eventuuid, eventTime, eventType, attname, attvalue]
    end
    db1.close
}
tmpdb.close
Machines::theOtherInstanceIds().each{|targetInstanceId|
    filepath2 = "#{Config::starlightCommsLine()}/#{targetInstanceId}/#{CommonUtils::timeStringL22()}.dxf1.sqlite3"
    FileUtils.cp(tmpfilepath, filepath2)
}
